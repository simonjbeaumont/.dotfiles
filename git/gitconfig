[include]
    path = ~/.gitconfig.personal
[includeIf "gitdir:~/work/**"]
    path = ~/.gitconfig.work
[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
[grep]
	lineNumber = true
[alias]
	st = status -sb
	co = checkout
	ci = commit
	d = diff
	dst = diff --stat
	ds = diff --staged
	dsst = diff --staged --stat
	l = log --graph --abbrev-commit --oneline --decorate
	ll = log
	a = add
	ap = add -p
	aa = add -a
	change-commits = "!f() { VAR1=$1; VAR='$'$1; OLD=$2; NEW=$3; echo \"Are you sure for replace $VAR  $OLD => $NEW ?(Y/N)\";read OK;if [ \"$OK\" = 'Y' ] ; then shift 3; git filter-branch  --env-filter \"if [ \\\"${VAR}\\\" = '$OLD' ]; then export $VAR1='$NEW';echo 'to $NEW'; fi\" $@; fi;};  f "  # e.g. git change-commits GIT_COMMITTER_NAME "old name" "new name"
[core]
	excludesfile = ~/.gitignore_global
	pager = less -x4,9
	editor = /usr/local/bin/vim
[hub]
	protocol = ssh
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[pull]
	ff = only
